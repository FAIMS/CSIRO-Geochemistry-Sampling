/*************************** CUSTOM `setFieldValue` ***************************/

// Makes `setFieldValue` unit-testable by ensuring `linker` is mocked during
// unit tests.
if (isInUnitTestTime()) {
  Linker() {
    setFieldValue(String ref, Object val) {
      FIELD_VALUES.put(ref, "" + val); // `FIELD_VALUES` is defined in mock.bsh
    }
    return this;
  }
  linker = Linker();
}

void setFieldValue(String ref, Object val) {
  if (isSampleIdRef(ref))
    val = formatSampleId(val);

  linker.setFieldValue(ref, val);
}

// Left padding with zeros such that the number of characters in `val` is fixed
// at 4. If `val.length() > 4` then `val` is returned unchanged.
String formatSampleId(Object val) {
  String padding     = "0000";
  int    numPadChars = Math.min(padding.length(), val.length());

  String unpadded    = val;
  String padded      = padding.substring(numPadChars) + unpadded;

  return padded;
}

boolean isSampleIdRef(String ref) {
  return
    ref != null &&
    ref.endsWith("/Basic_Info/Sample_ID");
}
