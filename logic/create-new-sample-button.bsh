/************************** CREATE NEW SAMPLE BUTTON **************************/
boolean digLen(String s, int n) {
  if (s == null) return false;
  return s.matches("\\d{" + n + "}");
}

boolean digLen(String s, int n, int m) {
  if (s == null) return false;
  return s.length() >= n && s.length() <= m;;
}

boolean chrLen(String s, int n) {
  if (s == null) return false;
  return s.length() == n;
}

boolean isInRange(String s, String smin, String smax) {
  try {
    int n   = Integer.parseInt(s);
    int min = Integer.parseInt(smin);
    int max = Integer.parseInt(smax);

    return isInRange(n, min, max);
  } catch (NumberFormatException e) {
    return false;
  }
}

boolean isInRange(int n, int min, int max) {
  return max >= n && min <= n;
}

boolean isValidSampleType      (String s) { return !isNull(s); }
boolean isValidSamplePrefix1   (String s) { return !isNull(s) && digLen(s,1,6); } // TODO: Test
boolean isValidSamplePrefix2   (String s) { return !isNull(s); }
boolean isValidSampleStartingId(String s) {
  String sId    = getFieldValue("Project/Start/Sample_Starting_ID");
  String sIdMin = getFieldValue("Project/Sample_ID_Ranges/Minimum_Sample_ID");
  String sIdMax = getFieldValue("Project/Sample_ID_Ranges/Maximum_Sample_ID");

  return !isNull(s)
      && digLen(s, LEN_SAMPLE_ID)
      && isInRange(sId, sIdMin, sIdMax);
}
boolean isValidMinSampleId(String s) { return digLen(s, LEN_SAMPLE_ID); }
boolean isValidMaxSampleId(String s) { return digLen(s, LEN_SAMPLE_ID); }

void onClickCreateNewSample() {
  String valType = getFieldValue("Project/Start/Sample_Type");
  String valPre1 = getFieldValue("Project/Start/Sample_Prefix_1");
  String valPre2 = getFieldValue("Project/Start/Sample_Prefix_2");
  String valId   = getFieldValue("Project/Start/Sample_Starting_ID");

  if (!isValidSampleType(valType)) {
    String head = "Invalid 'Sample Type'";
    String body = "Please select a Sample Type.";
    showWarning(head, body);
    return;
  }

  if (!isValidSamplePrefix1(valPre1)) {
    String head = "Invalid 'Sample Prefix 1'";

    String body = "";
    body += "Please enter a number into the 'Sample Prefix 1' field. 'Sample ";
    body += "Prefix 1' must consist of %s characters.";
    body  = replaceFirst(body, "" + LEN_PREFIX_1);

    showWarning(head, body);
    return;
  }

  if (!isValidSamplePrefix2(valPre2)) {
    String head = "Invalid 'Sample Prefix 2'";

    String body = "";
    body += "Please enter a number into the 'Sample Prefix 2' field. 'Sample ";
    body += "Prefix 2' must consist of %s characters.";
    body  = replaceFirst(body, "" + LEN_PREFIX_2);

    showWarning(head, body);
    return;
  }

  if (!isValidSampleStartingId(valId)) {
    String head = "Invalid 'Next Sample ID'";

    String body = "";
    body += "Please enter a number into the 'Next Sample ID' field. ";
    body += "'Next Sample ID' must consist of %s digits and be in the range";
    body += " specified in the 'Sample ID Ranges' tab.";
    body  = replaceFirst(body, "" + LEN_SAMPLE_ID);

    showWarning(head, body);
    return;
  }

  onClickProjectNewSample(valType);
}

void validateMinimumSampleId() {
  String sIdMin = getFieldValue("Project/Sample_ID_Ranges/Minimum_Sample_ID");

  if (!isValidMinSampleId(sIdMin)) {
    String head = "Invalid Minimum Sample ID";

    String body = "";
    body += "The 'Minimum Sample ID' field must contain a number consisting ";
    body += " of %s digits.";
    body  = replaceFirst(body, "" + LEN_SAMPLE_ID);

    showWarning(head, body);
  }
}

void validateMaximumSampleId() {
  String sIdMax = getFieldValue("Project/Sample_ID_Ranges/Maximum_Sample_ID");

  if (!isValidMaxSampleId(sIdMax)) {
    String head = "Invalid Maximum Sample ID";

    String body = "";
    body += "The 'Maximum Sample ID' field must contain a number consisting ";
    body += " of %s digits.";
    body  = replaceFirst(body, "" + LEN_SAMPLE_ID);

    showWarning(head, body);
  }
}

addOnEvent(
    "Project/Start/Create_New_Sample",
    "click",
    "onClickCreateNewSample()"
);

addOnEvent(
    "Project/Sample_ID_Ranges/Minimum_Sample_ID",
    "blur",
    "validateMinimumSampleId()"
);

addOnEvent(
    "Project/Sample_ID_Ranges/Maximum_Sample_ID",
    "blur",
    "validateMaximumSampleId()"
);
