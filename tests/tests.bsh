assert(digLen("0000", 4));
assert(digLen("0001", 4));
assert(digLen("1000", 4));
assert(digLen("1", 1));
assert(digLen("", 0));

assert( isInRange("0",    "0",        "0"));
assert(!isInRange("0",    "1",       "-1"));
assert(!isInRange("1",    "0",        "0"));
assert(!isInRange("0002", "0000",  "0001"));
assert( isInRange("0042", "0000",  "0100"));

void initFieldValues() {
  setFieldValue("Project/Sample_ID_Ranges/Minimum_Sample_ID", "0000");
  setFieldValue("Project/Sample_ID_Ranges/Maximum_Sample_ID", "0000");
  setFieldValue("Project/Start/Sample_Type",                  "0");
  setFieldValue("Project/Start/Sample_Prefix_1",              "00");
  setFieldValue("Project/Start/Sample_Prefix_2",              "000");
  setFieldValue("Project/Start/Sample_Starting_ID",           "0000");
}

{
  print("TEST: VALIDATION OF SAMPLE ID RANGES (SHOULD SHOW 2 WARNINGS):");
  initFieldValues();
  setFieldValue("Project/Sample_ID_Ranges/Minimum_Sample_ID", "000");
  setFieldValue("Project/Sample_ID_Ranges/Maximum_Sample_ID", "000");
  executeOnEvent(
      "Project/Sample_ID_Ranges/Minimum_Sample_ID",
      "blur"
  );
  executeOnEvent(
      "Project/Sample_ID_Ranges/Maximum_Sample_ID",
      "blur"
  );
  print("");

  print("TEST: VALIDATION OF SAMPLE ID RANGES (SHOULD SHOW 0 WARNINGS):");
  initFieldValues();
  setFieldValue("Project/Sample_ID_Ranges/Minimum_Sample_ID", "0000");
  setFieldValue("Project/Sample_ID_Ranges/Maximum_Sample_ID", "0000");
  executeOnEvent(
      "Project/Sample_ID_Ranges/Minimum_Sample_ID",
      "blur"
  );
  executeOnEvent(
      "Project/Sample_ID_Ranges/Maximum_Sample_ID",
      "blur"
  );
  print("");

  print("TEST: VALIDATION OF SAMPLE ID (SHOULD SHOW 1 WARNINGS):");
  initFieldValues();
  setFieldValue("Project/Sample_ID_Ranges/Minimum_Sample_ID", "0000");
  setFieldValue("Project/Sample_ID_Ranges/Maximum_Sample_ID", "0000");
  setFieldValue("Project/Start/Sample_Starting_ID",           "0001");
  executeOnEvent(
      "Project/Start/Create_New_Sample",
      "click"
  );
  print("");

  print("TEST: VALIDATION OF SAMPLE ID (SHOULD SHOW 1 WARNINGS):");
  initFieldValues();
  setFieldValue("Project/Start/Sample_Starting_ID", "000");
  executeOnEvent(
      "Project/Start/Create_New_Sample",
      "click"
  );
  print("");

  print("TEST: VALIDATION OF SAMPLE ID (SHOULD SHOW 0 WARNINGS):");
  initFieldValues();
  setFieldValue("Project/Sample_ID_Ranges/Minimum_Sample_ID", "0000");
  setFieldValue("Project/Sample_ID_Ranges/Maximum_Sample_ID", "0000");
  setFieldValue("Project/Start/Sample_Starting_ID",           "0000");
  executeOnEvent(
      "Project/Start/Create_New_Sample",
      "click"
  );
  print("");

  print("TEST: VALIDATION OF SAMPLE PREFIX 1 (SHOULD SHOW 1 WARNINGS):");
  initFieldValues();
  setFieldValue("Project/Start/Sample_Prefix_1", "00000");
  executeOnEvent(
      "Project/Start/Create_New_Sample",
      "click"
  );
  print("");

  print("TEST: VALIDATION OF SAMPLE PREFIX 1 (SHOULD SHOW 0 WARNINGS):");
  initFieldValues();
  setFieldValue("Project/Start/Sample_Prefix_1", "a0");
  executeOnEvent(
      "Project/Start/Create_New_Sample",
      "click"
  );
  print("");

  print("TEST: VALIDATION OF SAMPLE PREFIX 2 (SHOULD SHOW 1 WARNINGS):");
  initFieldValues();
  setFieldValue("Project/Start/Sample_Prefix_2", "a0000");
  executeOnEvent(
      "Project/Start/Create_New_Sample",
      "click"
  );
  print("");

  print("TEST: VALIDATION OF SAMPLE PREFIX 2 (SHOULD SHOW 0 WARNINGS):");
  initFieldValues();
  setFieldValue("Project/Start/Sample_Prefix_2", "a00");
  executeOnEvent(
      "Project/Start/Create_New_Sample",
      "click"
  );
  print("");
}

{
  print("TEST: printLabel():");
  String getDisplayedTabGroup() { return "Water_Sample"; }
  setFieldValue("Water_Sample/Basic_Info/Timestamp_Field", "10/10/2010");
  setFieldValue("Water_Sample/Vars/Timestamp", "03Nov2017");
  setUuid("Water_Sample", "1234567890123456789");
  executeOnEvent(
      "Water_Sample/Basic_Info/Print_Label",
      "click"
  );
  print("");
}

{
  setFieldValue(AUTONUM_SOURCE, "");
  executeOnEvent(
      "Project",
      "show"
  );
  assert(getFieldValue(AUTONUM_SOURCE).equals("0001"));
  assert(incField(AUTONUM_SOURCE).equals(2));
}

{
  updateDisplayedTabGroup("Water_Sample");
  SCANNED_IGSN = "aa-BBB-1111";
  setIgsn();
  assert(getFieldValue("Water_Sample/Basic_Info/Sample_Prefix_1").equals("aa"));
  assert(getFieldValue("Water_Sample/Basic_Info/Sample_Prefix_2").equals("BBB"));
  assert(getFieldValue("Water_Sample/Basic_Info/Sample_ID")      .equals("1111"));
}

{
  setFieldValue("Project/Start/Sample_Prefix_1", "CSMAST");
  String igsn = "CSMAST-W-0004-AN";
  assert("CSMAST".equals(parsePrefix1 (igsn)));
  assert("W"     .equals(parsePrefix2 (igsn)));
  assert("0004"  .equals(parseSampleId(igsn)));
  assert(parseSuffix(igsn) == null);
}

{
  assert(formatSampleId("1")    .equals( "0001"));
  assert(formatSampleId("11")   .equals( "0011"));
  assert(formatSampleId("111")  .equals( "0111"));
  assert(formatSampleId("1111") .equals( "1111"));
  assert(formatSampleId("11111").equals("11111"));
}

{
  String refSId = "Soil/Basic_Info/Sample_ID";
  String refSp1 = "Soil/Basic_Info/Sample_Prefix_1";
  String val;

  // Setting refSId
  setFieldValue(refSId, "1");
  val = getFieldValue(refSId);
  assert(val.equals("0001"));

  // Setting refSp1
  setFieldValue(refSp1, "1");
  val = getFieldValue(refSp1);
  assert(val.equals("1"));
}
